source('~/vw7.6ncnovo/cormas2020/Models/WitUses/analyses/RAnalyses.R', echo=TRUE)
source('~/vw7.6ncnovo/cormas2020/Models/WitUses/analyses/RAnalyses.R', echo=TRUE)
resPlanBig %>%
gplot() +
geom_line(aes(x=satisfiedUsers, y=step)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
resPlanBig %>%
ggplot() +
geom_line(aes(x=satisfiedUsers, y=step)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
resPlanBig
resPlanBig %>%
ggplot() +
geom_line(aes(x=satisfiedUsers, y=t)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
resPlanBig %>%
tbl_df()
resPlanBig
resPlanBig %>%
ggplot() +
geom_line(aes(y=satisfiedUsers, x=t)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
source('~/vw7.6ncnovo/cormas2020/Models/WitUses/analyses/RAnalyses.R', echo=TRUE)
resPlanBig %>%
ggplot() +
geom_line(aes(y=satisfiedUsers, x=t)) +
facet_grid(ressTappingMobile ~ ressTappingSettled, labeller = label_both())
source('~/vw7.6ncnovo/cormas2020/Models/WitUses/analyses/RAnalyses.R', echo=TRUE)
write.table(x=resPlanBig,file = "simulation-results.csv",
sep = ";",
dec = ".",
header =  T)
write.table(x=resPlanBig,file = "simulation-results.csv",
sep = ";",
dec = ".")
write.table(x=resPlanBig,file = "simulation-results.csv",
sep = ";",
dec = ".",
row.names = F)
# load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# set working directory
setwd("~/vw7.6ncnovo/cormas2020/Models/WitUses/analyses")
#load functions to interact with cormas
source("cormas-func.R")
#Open model
r <- openModel("WitUses", parcelFile="WitUses.pcl")
# load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# set working directory
setwd("~/vw7.6ncnovo/cormas2020/Models/WitUses/analyses")
#load functions to interact with cormas
source("cormas-func.R")
#Open model
r <- openModel("WitUses", parcelFile="WitUses.pcl")
# Set the basic init and step method
r <- setInit("init") # Initialization choice
# Set the basic init and step method
r <- setInit("init") # Initialization choice
r <- setStep("step:") # Scenario choice
resPlan <- NULL
resPlanBig <- NULL
rTMValues <- c(0.1, 1)
rTSValues <- c(0.1 ,1)
simuDuration <- 20
ressTappingMobileValue <- 0.5
ressTappingSettledValue <- 0.5
#choose the probe to activate during the simulation
r<- activateProbe("satisfiedUsers", "Observer")
r <- setNumericAttributeValue("ressTappingFromR",
"MobileUse",
ressTappingMobileValue)
r <- setNumericAttributeValue("ressTappingFromR",
"SettledUse",
ressTappingSettledValue)
####### Initialize the Cormas model #######
r <- initSimu()
####### Run Simulation #######
R <- runSimu(simuDuration)
getAttributesOfEntities("satisfiedUsers",
"Observer")
getAttributesOfEntities("Users",
"capital")
getAttributesOfEntities("capital", "User")
runSimu(2)
getAttributesOfEntities("capital", "User")
??gini
??Gini
getAttributesOfEntities("satisfiedUsers",
"Observer")
getAttributesOfEntities("satisfiedUsers",
"Observer") %>%
pull("satisfiedUsers")
# load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# set working directory
setwd("~/vw7.6ncnovo/cormas2020/Models/WitUses/analyses")
#setwd("C:/vw7.6nc/cormas2020/Models/WitUses/analyses")
#load functions to interact with cormas
source("cormas-func.R")
#Open model
r <- openModel("WitUses", parcelFile="WitUses.pcl")
# Set the basic init and step method
r <- setInit("init") # Initialization choice
r <- setStep("step:") # Scenario choice
resPlan <- NULL
resPlanBig <- NULL
rTMValues <- c(0.1, 1)
rTSValues <- c(0.1 ,1)
simuDuration <- 20
expPlanProgress <- txtProgressBar(min = 1,
max = length(rTMValues) * length(rTMValues),
style = 3)
simuNb <- 0
nbReplication <- 5
## Set the value of attribute
for (ressTappingMobileValue in rTMValues) {
for (ressTappingSettledValue in rTSValues) {
for (replicate in 1:nbReplication) {
simuNb <- simuNb + 1
setTxtProgressBar(expPlanProgress, simuNb)
#choose the probe to activate during the simulation
r<- activateProbe("satisfiedUsers", "Observer")
r <- setNumericAttributeValue("ressTappingFromR",
"MobileUse",
ressTappingMobileValue)
r <- setNumericAttributeValue("ressTappingFromR",
"SettledUse",
ressTappingSettledValue)
####### Initialize the Cormas model #######
r <- initSimu()
####### Run Simulation #######
R <- runSimu(simuDuration)
runSimu(2)
### Get results ####
res <- getNumericProbe("satisfiedUsers", "Observer")
lastNbSatisfiedUsers <- getAttributesOfEntities("satisfiedUsers",
"Observer") %>%
pull("satisfiedUsers")
getAttributesOfEntities("capital", "User")
resPlan <- rbind(resPlan, c(ressTappingMobileValue,
ressTappingSettledValue,
simuNb,
lastNbSatisfiedUsers))
res$ressTappingMobile <- ressTappingMobileValue
res$ressTappingSettled <- ressTappingSettledValue
res$simuNb <- simuNb
resPlanBig <- rbind(resPlanBig, res)
}
}}
colnames(resPlan) <- c("ressTappingMobile",
"ressTappingSettled",
"simuNb",
"satisfiedUsers")
resPlanBig %>%
tbl_df()
2*2*5
2*2*5*20
2*2*5*22
2*2*5*23
resPlanBig
resPlanBig %>%
tbl_df() %>%
group_by(ressTappingMobile,
ressTappingSettled,
t)
resPlanBig %>%
tbl_df() %>%
group_by(ressTappingMobile,
ressTappingSettled,
t) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers),
sdSatisfiedUsers = sd(satisfiedUsers))
resPlanBig %>%
mutate(simuNb = as.factor(simuNb)) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers, x=t, color = simuNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
resPlanBig %>%
mutate(repNb = as.factor(simuNb / length(rTMValues) * length(rTMValues))) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers, x=t, color = repNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
length(rTMValues) * length(rTMValues)
resPlanBig %>%
mutate(repNb = as.factor(simuNb / length(rTMValues) * length(rTMValues))) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers, x=t, color = repNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
?modulo
??modulo
52 //4
52 \\4
52 %/% 4
42 %/% 4
resPlanBig %>%
mutate(repNb = as.factor(simuNb %/% length(rTMValues) * length(rTMValues))) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers, x=t, color = repNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
resPlanBig$simuNb
resPlanBig$simuNb %/% length(rTMValues) * length(rTMValues)
length(rTMValues) * length(rTMValues)
resPlanBig %>%
resPlanBig %>%
resPlanBig$simuNb %/% length(rTMValues) * length(rTMValues)sqcqs
resPlanBig %>%
mutate(repNb = as.factor(simuNb %/% (length(rTMValues) * length(rTMValues)))) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers, x=t, color = repNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
?geom_line
resPlanBig %>%
mutate(repNb = as.factor(simuNb %/% (length(rTMValues) * length(rTMValues)))) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers, x=t, color = repNb, group = simuNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled)
resPlanBig %>%
tbl_df()
resPlanBig %>%
mutate(repNb = as.factor(simuNb %/% (length(rTMValues) * length(rTMValues)))) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers,
x=t,
color = repNb,
group = simuNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled, labeller = label_both())
resPlanBig %>%
mutate(repNb = as.factor(simuNb %/% (length(rTMValues) * length(rTMValues)))) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers,
x=t,
color = repNb,
group = simuNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled, labeller = label_both)
resPlanBig %>%
tbl_df() %>%
group_by(ressTappingMobile,
ressTappingSettled,
t) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers),
sdSatisfiedUsers = sd(satisfiedUsers)) %>%
ggplot() +
geom_line(aes(y=expectedSatisfiedUsers,
x=t)) +
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlanBig %>%
tbl_df() %>%
group_by(ressTappingMobile,
ressTappingSettled,
t) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers),
sdSatisfiedUsers = sd(satisfiedUsers)) %>%
ggplot() +
geom_line(aes(y=expectedSatisfiedUsers,
x=t)) +
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlanBig %>%
tbl_df() %>%
group_by(ressTappingMobile,
ressTappingSettled,
t) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers),
sdSatisfiedUsers = sd(satisfiedUsers)) %>%
ggplot() +
geom_line(aes(y=expectedSatisfiedUsers,
x=t)) +
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlanBig %>%
mutate(repNb = as.factor(simuNb %/% (length(rTMValues) * length(rTMValues)))) %>%
ggplot() +
geom_line(aes(y=satisfiedUsers,
x=t,
color = repNb,
group = simuNb)) +
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlanBig %>%
tbl_df() %>%
group_by(ressTappingMobile,
ressTappingSettled,
t) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers),
sdSatisfiedUsers = sd(satisfiedUsers)) %>%
ggplot() +
geom_line(aes(y=expectedSatisfiedUsers,
x=t)) +
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlan
resPlan %>%
ggplot() +
geom_boxplot(satisfiedUsers)+
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlan %>%
ggplot() +
geom_boxplot(aes(x = satisfiedUsers)) +
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlan %>%
as.data.frame()
resPlan %>%
as.data.frame() %>%
ggplot() +
geom_boxplot(aes(x = satisfiedUsers)) +
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlan %>%
as.data.frame() %>%
ggplot() +
geom_boxplot(aes(y = satisfiedUsers)) +
facet_grid(ressTappingMobile ~ ressTappingSettled,
labeller = label_both)
resPlan %>%
as.data.frame() %>%
group_by(ressTappingMobile,
ressTappingSettled) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers)) %>%
ggplot() +
geom_tile(aes(z = satisfiedUsers, y = ressTappingMobile, x = ressTappingSettled))
resPlan %>%
as.data.frame() %>%
group_by(ressTappingMobile,
ressTappingSettled) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers)) %>%
ggplot() +
geom_tile(aes(z = expectedSatisfiedUsers, y = ressTappingMobile, x = ressTappingSettled))
resPlan %>%
as.data.frame() %>%
group_by(ressTappingMobile,
ressTappingSettled) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers)) %>%
ggplot() +
geom_tile(aes(fill = expectedSatisfiedUsers,
y = ressTappingMobile,
x = ressTappingSettled))
resPlan %>%
as.data.frame() %>%
group_by(ressTappingMobile,
ressTappingSettled) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers))
resPlan %>%
as.data.frame() %>%
group_by(ressTappingMobile,
ressTappingSettled) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers)) %>%
ggplot() +
geom_tile(aes(fill = expectedSatisfiedUsers,
y = ressTappingMobile,
x = ressTappingSettled)) +
ggsave("plan.pdf")
resPlan %>%
as.data.frame() %>%
group_by(ressTappingMobile,
ressTappingSettled) %>%
summarise(expectedSatisfiedUsers = mean(satisfiedUsers)) %>%
ggplot() +
geom_tile(aes(fill = expectedSatisfiedUsers,
y = ressTappingMobile,
x = ressTappingSettled)) +
ggsave("plan.pdf",
width = 15,
height = 15,
units = "cm")
